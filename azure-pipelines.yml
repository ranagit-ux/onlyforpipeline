# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: infrapipeline
trigger:
- main
pool: autopool
stages:
  - stage: 
    jobs:
      - job: terraformintallation
        steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: 'latest'
      - job: Terraforminit
        dependsOn: terraformintallation
        steps:
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
              backendServiceArm: 'autopool'
              backendAzureRmResourceGroupName: 'forpipeline'
              backendAzureRmStorageAccountName: 'mypipelinestorage'
              backendAzureRmContainerName: 'pipelinecontainer'
              backendAzureRmKey: 'terraform.tfstate'
          - task: TerraformTaskV4@4
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/environment/dev'
              environmentServiceNameAzureRM: 'autopool'